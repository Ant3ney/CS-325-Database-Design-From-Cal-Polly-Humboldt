--Anthony Cavuoti
--CS 325 - Homework 4 - Problem 2
@INIT.SQL;

SPOOL 325HW-4-OUT.TXT;

PROMPT ANTHONY CAVUOTI;

PROMPT HOMEWORK 4 PROBLEM 2;

PROMPT PROBLEM 2-1;

SELECT
    VID_ID,
    VID_FORMAT
FROM
    VIDEO
WHERE
    VID_RENTAL_PRICE < (
        SELECT
            AVG(VID_RENTAL_PRICE)
        FROM
            VIDEO
    );

PROMPT PROBLEM 2-2;

SELECT
    CLIENT_LNAME,
    CLIENT_FNAME
FROM
    CLIENT
WHERE
    CLIENT_NUM IN (
        SELECT
            CLIENT_NUM
        FROM
            RENTAL
        WHERE
            VID_ID = '130012'
    );

PROMPT PROBLEM 2-3;

SELECT
    MOVIE_TITLE ||' (' || MOVIE_YR_RELEASED || ')' "Movies",
    MOVIE_DIRECTOR_LNAME                           "Directors"
FROM
    MOVIE;

PROMPT PROBLEM 2-4;

SELECT
    CLIENT_LNAME,
    CLIENT_FNAME,
    CLIENT_PHONE
FROM
    CLIENT
WHERE
    EXISTS (
        SELECT
            'a'
        FROM
            RENTAL
        WHERE
            DATE_RETURNED IS NULL
            AND CLIENT.CLIENT_NUM = RENTAL.CLIENT_NUM
    );

PROMPT PROBLEM 2-5;

SELECT
    MOVIE_TITLE
FROM
    MOVIE
WHERE
    NOT EXISTS (
        SELECT
            'a'
        FROM
            VIDEO
        WHERE
            (VID_FORMAT = 'Blu-Ray')
            AND (MOVIE.MOVIE_NUM = VIDEO.MOVIE_NUM)
    );

PROMPT PROBLEM 2-6;

SELECT
    MOVIE_TITLE,
    MOVIE_YR_RELEASED
FROM
    MOVIE
WHERE
    MOVIE_DIRECTOR_LNAME = '&movie_director_lname';

PROMPT PROBLEM 2-7;

SELECT
    *
FROM
    CLIENT
ORDER BY
    CLIENT_CREDIT_RTG;

SELECT
    *
FROM
    CLIENT
ORDER BY
    CLIENT_CREDIT_RTG DESC;

PROMPT PROBLEM 2-8;

SELECT
    MOVIE_CATEGORY.CATEGORY_NAME,
    MOVIE_TITLE,
    MOVIE_RATING
FROM
    MOVIE,
    MOVIE_CATEGORY
WHERE
    MOVIE.CATEGORY_CODE = MOVIE_CATEGORY.CATEGORY_CODE
ORDER BY
    MOVIE_RATING,
    MOVIE_CATEGORY.CATEGORY_NAME DESC,
    MOVIE_TITLE;

PROMPT PROBLEM 2-9;

SELECT
    CLIENT_LNAME,
    CLIENT_PHONE,
    CLIENT_CREDIT_RTG
FROM
    CLIENT
WHERE
    CLIENT_CREDIT_RTG <= (
        SELECT
            AVG(CLIENT_CREDIT_RTG)
        FROM
            CLIENT
    )
ORDER BY
    CLIENT_CREDIT_RTG DESC;

PROMPT PROBLEM 2-10;

SELECT
    VID_FORMAT,
    COUNT(VID_FORMAT)     "QTY",
    AVG(VID_RENTAL_PRICE) "AVG RENTAL PRICE"
FROM
    VIDEO
GROUP BY
    (VID_FORMAT);

PROMPT PROBLEM 2-11;

SELECT
    VID_RENTAL_PRICE,
    COUNT(VID_RENTAL_PRICE) "QUANTITY"
FROM
    VIDEO
GROUP BY
    (VID_RENTAL_PRICE)
ORDER BY
    VID_RENTAL_PRICE DESC;

PROMPT PROBLEM 2-12;

SELECT
    VID_RENTAL_PRICE,
    COUNT(VID_RENTAL_PRICE) "QUANTITY"
FROM
    VIDEO
GROUP BY
    (VID_RENTAL_PRICE)
HAVING
    COUNT(VID_RENTAL_PRICE) > 4
ORDER BY
    VID_RENTAL_PRICE DESC;

SPOOL OFF;